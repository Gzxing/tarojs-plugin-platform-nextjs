const path = require('path')

/** @type {import('next').NextConfig} */
const nextConfig = {
    env: {
    <%_ Object.keys(env).forEach(function (key) { _%>
        <%_ if (key !== 'NODE_ENV') { _%>
        <%- key %>: <%- env[key] %>,
        <%_ } _%>
    <%_ }) _%>
    },
    sassOptions: {
        <%_ if (prependData) { _%>
        prependData: <%- prependData %>,
        <%_ } _%>
        <%_ if (includePaths) { _%>
        includePaths: <%- includePaths %>
        <%_ } _%>
    },
    webpack(config, {isServer, webpack}) {
        for (let i = 0; i < config.plugins.length; i++) {
            const plugin = config.plugins[i]
            if (plugin.constructor.name === 'DefinePlugin') {
                config.plugins[i] = new webpack.DefinePlugin({
                    ENABLE_INNER_HTML: JSON.stringify(true),
                    ENABLE_ADJACENT_HTML: JSON.stringify(true),
                    ENABLE_SIZE_APIS: JSON.stringify(true),
                    ENABLE_TEMPLATE_CONTENT: JSON.stringify(true),
                    ENABLE_MUTATION_OBSERVER: JSON.stringify(true),
                    ENABLE_CLONE_NODE: JSON.stringify(true),
                    ENABLE_CONTAINS: JSON.stringify(true),
                    ...plugin.definitions
                })
            }
        }

        config.plugins.push(
            new webpack.NormalModuleReplacementPlugin(
                /@tarojs\/taro-h5\/dist\/api\/utils\/index.js/,
                'tarojs-plugin-platform-nextjs/taro/lib/utils/index.js'
            )
        )

        return config
    },
    <%_ if (rewrites) { _%>
    async rewrites() {
        return {
            beforeFiles:  [
            <%_ rewrites.forEach(function (rewrite) { _%>
                {
                    source: '<%- rewrite.source %>',
                    <%_ if (rewrite.has) { _%>
                    has: [
                        <%_ rewrite.has.forEach(function (item) { _%>
                        {
                            type: '<%- item.type %>',
                            key: '<%- item.key %>',
                            value: '<%- item.value %>'
                        },
                        <%_ }) _%>
                    ],
                    <%_ } _%>
                    destination: '<%- rewrite.destination %>'
                },
            <%_ }) _%>
            ]
        }
    }
    <%_ } _%>
}
  
module.exports = nextConfig
